<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd
        ">
	<context:component-scan base-package="com.sun.mq.kafka" annotation-config="true" />
	<!--&lt;!&ndash; 定义consumer的参数 &ndash;&gt;
	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="localhost:9092"/>
				<entry key="group.id" value="0"/>
				<entry key="enable.auto.commit" value="true"/>
				<entry key="auto.commit.interval.ms" value="1000"/>
				<entry key="session.timeout.ms" value="15000"/>
				<entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
				<entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
			</map>
		</constructor-arg>
	</bean>

	&lt;!&ndash; 创建consumerFactory bean &ndash;&gt;
	<bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<ref bean="consumerProperties"/>
		</constructor-arg>
	</bean>


	&lt;!&ndash; 消费者容器配置信息 &ndash;&gt;
	<bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
		<constructor-arg value="test"/>
		<property name="messageListener" value="kafkaConsumerListener" />
	</bean>

	&lt;!&ndash; 创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 &ndash;&gt;
	<bean id="kafkaListenerContainerFactory" class="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory" >
		<property name="concurrency" value="3" />
		<property name="autoStartup" value="true" />
		<property name="consumerFactory" ref="consumerFactory" />
	</bean>

	<bean id="kafkaMessageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" >
		<constructor-arg name="consumerFactory" ref="consumerFactory" />
		<constructor-arg name="containerProperties" ref="containerProperties" />
	</bean>

	<bean id="kafkaConsumerListener" clacom.sun.mq.kafkaafka.KafkaConsumerListener"/>-->
</beans>